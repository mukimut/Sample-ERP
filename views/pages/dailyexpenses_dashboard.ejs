<style>
	.card {
		box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
		transition: 0.3s;
	}

	.boxbdymt {
		margin-top: 25px;
	}

	.fa_edt {
		font-size: 22px;
		color: rgb(4, 117, 161);
		font-weight: bold;
	}

	.fa_dlt {
		font-size: 22px;
		color: red;
		font-weight: bold;
	}

	.fa_detail {
		font-size: 24px;
		color: rgb(202, 132, 3);
		font-weight: bold;
	}

	.fa_chk {
		font-size: 22px;
		color: green;
		font-weight: bold;
	}

	.fa_cros {
		font-size: 22px;
		color: red;
		font-weight: bold;
	}

	input[type="date"].form-control,
	input[type="datetime-local"].form-control,
	input[type="month"].form-control,
	input[type="time"].form-control {
		line-height: 13px;
	}
	.nav-tabs-custom>.nav-tabs>li.active {
		border-top-color:
			#519f45;
	}
.tab_display{
display:none !important;
}
</style>
<div class="content-wrapper">
	<section class="invoice">
		<div class="row">
			<div class="col-xs-12">
				<div class="row">
					<div class="nav-tabs-custom">
						<ul class="nav nav-tabs">
							<li class="active" id="deptHeadTab"><a href="#tab_1" data-toggle="tab">Department Head</a></li>
							<li id="managerTab"><a href="#tab_4" data-toggle="tab" >Management</a></li>
							<li id="paymentTab"><a href="#tab_2" data-toggle="tab">Payment</a></li>
							<li><a href="#tab_3" data-toggle="tab">Report</a></li>
						</ul>
						<div class="tab-content" style="padding-bottom: 0px;">
							<div class="tab-pane active" id="tab_1">
								<div class="row">
									<div class="col-md-12 form-horizontal">
										<div class="box">
											<div class="box-body table-responsive no-padding">
												<table class="table table-hover">
													<thead>
														<th>Invoice</th>
														<th>Purpose</th>
														<th>Project</th>
														<th>Type</th>
														<th>Amount</th>
														<th>Action</th>
													</thead>
													<tbody id="hdTable"></tbody>
												</table>
											</div>
										</div>
									</div>
								</div>
							</div>
							<div class="tab-pane active" id="tab_4">
								<div class="row">
									<div class="col-md-12 form-horizontal">
										<div class="box">
											<div class="box-body table-responsive no-padding">
												<table class="table table-hover">
													<thead>
														<th>Invoice</th>
														<th>Purpose</th>
														<th>Project</th>
														<th>Type</th>
														<th>Amount</th>
														<th>Action</th>
													</thead>
													<tbody id="approveTable"></tbody>
												</table>
											</div>
										</div>
									</div>
								</div>
							</div>
							<div class="tab-pane" id="tab_2">
								<div class="row">
									<div class="col-md-12 form-horizontal">
										<div class="box">
											<div class="box-body table-responsive no-padding">
												<table class="table table-hover">
													<thead>
														<th>Invoice</th>
														<th>Purpose</th>
														<th>Project</th>
														<th>Type</th>
														<th>Amount</th>
														<th>Status</th>
													</thead>
													<tbody id="cashTable"></tbody>
												</table>
											</div>
										</div>
									</div>
								</div>
							</div>
							<!-- /.tab-pane -->
							<div class="tab-pane" id="tab_3">
								<div class="row" id="addressArea">
									<div class="col-md-12 form-horizontal">
										<div class="box-body">
											<div class="row">
												<div class="col-md-6">
													<div class="form-group">
														<div class="col-sm-12">
															<label>From</label>
															<input type="date" class="form-control" name="bday" id="fromDate">
														</div>
													</div>
												</div>
												<div class="col-md-6">
													<div class="form-group">
														<div class="col-sm-12 ">
															<label>To</label>
															<input type="date" class="form-control" id="toDate">
														</div>
													</div>
												</div>
											</div>
											<div class="row">
												<div class="col-md-6">
													<div class="form-group">
														<div class="col-sm-12">
															<input type="text" class="form-control" id="invoice" placeholder="Invoice No">
														</div>
													</div>
												</div>
												<div class="col-md-6">
													<div class="form-group">
														<div class="col-sm-12 "><select id="project" class="form-control"></select>
														</div>
													</div>
												</div>
											</div>
											<div class="row">
												<div class="col-md-6">
													<button class="btn btn-flat btn-primary" onclick="search()"> Search </button>
													<button class="btn btn-flat btn-primary" onclick="downloadPdf()()"> Open as PDF </button>
												</div>
											</div>
											<br />
											<div class="row">
												<div class="col-md-12 form-horizontal">
													<div class="box">
														<div class="box-body table-responsive no-padding">
															<table class="table table-hover">
																<thead>
																	<th>Invoice</th>
																	<th>Purpose</th>
																	<th>Project</th>
																	<th>Type</th>
																	<th>Amount</th>
																	<th>Status</th>
																</thead>
																<tbody id="reportTable"></tbody>
															</table>
														</div>
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</section>
	<div class="clearfix"></div>
</div>

<script src="/dependencies/jquery.js"></script>
<script src="/js/dropdown.js"></script>
<script src="/js/table.js"></script>
<script src="/plugins/pdfmake/pdfmake.min.js"></script>
<script src="/plugins/pdfmake/vfs_fonts.min.js"></script>
<script src="/js/pdf.js"></script>
<script>
	let cashData = [], approveData = [], hdData = [];

	// localStorage.setItem('department', 'IT');
	// localStorage.setItem('designation', 'Department Head');
	
	setLovData('tov?type=Projects', 'project', 'Select Project');
	const statuses = [0, 1, 3];// statuses = [];
	const designation = localStorage.getItem('designation');
	const department = localStorage.getItem('department');


	if(statuses.length) getExpenses();


	function getExpenses() {
		cashData = [], approveData = [], hdData = [], reportData = [];
		$.get('/api/expense?status=' + statuses.join(), (res) => {
			const cashTable = document.getElementById('cashTable');
			const approveTable = document.getElementById('approveTable');
			const hdTable = document.getElementById('hdTable');
			let approvedIndex = 0, cashIndex = 0, hdIndex = 0;

			cashTable.innerHTML = '', approveTable.innerHTML = '', hdTable.innerHTML = '';
			res.forEach((element) => {
				//if(element.approved === 0 && element.department != department) return;

				let row, buttonString, currentIndex;
				switch(element.approved) {
					case 0:
						currentIndex = hdIndex;
						hdData.push(element);
						row = hdTable.insertRow();
						buttonString = `<i class="fa fa-check fa_chk" onclick="varifyExpense(` + hdIndex + `, 1, ` + element.id + `, 0)">Approve</i>
														<i class="fa fa-times fa_cros" onclick="varifyExpense(` + hdIndex + `, 2, ` + element.id + `)">Reject</i>`;
						hdIndex++;
						break;

					case 1: 
						currentIndex = approvedIndex;
						approveData.push(element);
						row = approveTable.insertRow();
						buttonString = `<i class="fa fa-check fa_chk" onclick="varifyExpense(` + approvedIndex + `, 3, ` + element.id + `, 1)">Approve</i>
													<i class="fa fa-times fa_cros" onclick="varifyExpense(` + approvedIndex + `, 4, ` + element.id + `)">Reject</i>`;
						approvedIndex++;
						break;

					case 3: 
						cashData.push(element);
						row = cashTable.insertRow();
						buttonString = '<i class="fa fa-check fa_chk" onclick="varifyExpense(' + cashIndex + ', 5, ' + element.id + ')">Paid</i>';
						cashIndex++;
						break;
				}

				addCell(row, element.invoice);
				addCell(row, element.purpose);
				addCell(row, element.project);
				addCell(row, element.type);

				if(element.approved != 3) {
					let cell = row.insertCell();
					cell.innerHTML = '<input type="number" id="amount' + element.approved + '_' + currentIndex + '" value="' + element.amount + '">';
				}
				else addCell(row, element.amount);
				
				cell = row.insertCell();
				cell.innerHTML = buttonString;
			});
		});
	}

	function varifyExpense(index, status, id, fieldSerial) {
		const data = {approved: status};
		if(status === 1 || status === 3) data.amount = document.getElementById('amount' + fieldSerial + '_' + index).value;
		$.ajax({
			url: '/api/expense', method: 'PUT', data: { data: data, id: id }, success: res => {
				cashData = [];
				getExpenses();
			}
		});
	}

	function search() {
		const invoice = document.getElementById('invoice').value;
		const fromDate = document.getElementById('fromDate').value;
		const toDate = document.getElementById('toDate').value;
		const project = getSelectedText('project');

		let link = '/api/expense?';
		if(invoice) link += 'invoice=' + invoice + '&';
		if(project) link += 'project=' + project + '&';
		if(fromDate) link += 'from=' + fromDate + '&';
		if(toDate) link += 'to=' + toDate + '&';

		$.get(link, (res) => {
			reportData = res;
			const reportTable = document.getElementById('reportTable');
			reportTable.innerHTML = '';

			res.forEach(element => {
				const row = reportTable.insertRow();

				addCell(row, element.invoice);
				addCell(row, element.purpose);
				addCell(row, element.project);
				addCell(row, element.type);
				addCell(row, element.amount);
				addCell(row, getStatus(element.approved));
			});
		});
	}

	function downloadPdf() {
		const title = 'Expense Report';
		const description = 'From ' + document.getElementById('fromDate').value + ' To ' + document.getElementById('fromDate').value; 
		const data = [['Invoice', 'Purpose', 'Project', 'Type', 'Amount', 'Status']];
		reportData.forEach((element) => {
			data.push(
				[element.invoice, element.purpose, element.project, element.type, element.amount, getStatus(element.approved)]
			);
		});

		pdfReport(data, title, 'portrait', description);
	}

	function getStatus(statusValue) {
		let returnValue;
		switch(statusValue) {
			case 0: returnValue = 'Waiting for Approval';
				break;
			case 1: returnValue = 'Approved By Department Head';
				break;
			case 2: returnValue = 'Rejected by Department Head';
				break;
			case 3: returnValue = 'Approved by Management';
				break;
			case 4: returnValue = 'Rejected by Management';
				break;
			case 5: returnValue = 'Paid';
				break;
			case 6: returnValue = 'Payment Received';
				break;
		}
		return returnValue;
	}
</script>
