<style>
	.card {
		/* Add shadows to create the "card" effect */
		box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
		transition: 0.3s;
	}

	.boxbdymt {
		margin-top: 25px;
	}
</style>
<div class="content-wrapper">
	<section class="content-header">
		<h1>Products<small>Settings</small></h1>
		<ol class="breadcrumb">
			<li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
			<li><a href="#">Master Settings</a></li>
			<li class="active">user</li>
		</ol>
	</section>
	<section class="invoice">
		<div class="row">
			<div class="col-xs-12">
				<h2 class="page-header">Products
					<small class="pull-right">Date:
						<script>
							var d = new Date();
							document.write(d.toLocaleString());
						</script>
					</small></h2>
			</div>
		</div>
		<div class="row">
			<div class="card col-md-6 form-horizontal col-md-offset-3">
				<div class="box-body boxbdymt">
					<div class="form-group">
						<!-- <label for="inputEmail3" class="col-sm-2 control-label">Product</label> -->
						<div class="col-sm-12"><input type="text" class="form-control" id="name"
								placeholder="Product Name">
						</div>
					</div>
					<div class="form-group">
						<!-- <label for="inputEmail3" class="col-sm-2 control-label">Category</label> -->
						<div class="col-sm-12">
							<select id="category" class="form-control" onchange="categorySelected()">
								<option selected>Category</option>
							</select>
						</div>
					</div>
					<div class="form-group">
						<!-- <label for="inputEmail3" class="col-sm-2 control-label">Group</label> -->
						<div class="col-sm-12">
							<select id="group" class="form-control" onchange="groupSelected()">
								<option selected>Group</option>
							</select>
						</div>
					</div>
					<div class="form-group">
						<!-- <label for="inputEmail3" class="col-sm-2 control-label">Type</label> -->
						<div class="col-sm-12"><select id="type" class="form-control">
								<option selected>Type</option>
							</select></div>
					</div>
					<div class="form-group">
						<!-- <label for="inputEmail3" class="col-sm-2 control-label">Price</label> -->
						<div class="col-sm-12"><input type="number" class="form-control" id="price"
								placeholder="Price per Unit"></div>
					</div>
					<div class="form-group">
						<!-- <label for="inputEmail3" class="col-sm-2 control-label">Description</label> -->
						<div class="col-sm-12"><input type="text" class="form-control" id="description"
								placeholder="Item Description"></div>
					</div>
					<div class="form-group">
						<!-- <label for="inputEmail3" class="col-sm-2 control-label">Brand</label> -->
						<div class="col-sm-12"><input type="text" class="form-control" id="brand"
								placeholder="Product Brand"></div>
					</div>
					<div class="row" style="margin-bottom: 20px;">
						<div class="col-md-10">
							<div class="row">
								<div class="box-footer pull-left" style="border-top: 0px; margin-left: 4px;">
									<button class="btn btn-flat btn-success" onclick="submit()">New Product</button>
									<button class="btn btn-flat btn-primary" onclick="edit()" disabled
										id="submitEdit">Edit
										Product</button>
								</div>
							</div>
						</div>
					</div>
				</div>

			</div>
		</div><br><br><br>
		<!-- <div class="row">
			<div class="col-md-6">
				<div class="box-footer pull-right" style="border-top: 0px">
					<button class="btn btn-info" onclick="submit()">New Product</button>
					<button class="btn btn-default" onclick="edit()" disabled id="submitEdit">Edit Product</button>
				</div>
			</div>
		</div> -->
		<div class="row">
			<div class="col-xs-12">
				<div class="box">
					<div class="box-header">
						<h3 class="box-title">User Details</h3>
						<div class="box-tools">
							<div class="input-group input-group-sm" style="width: 150px;">
								<input type="text" name="table_search" class="form-control pull-right"
									placeholder="Search">
								<div class="input-group-btn">
									<button type="submit" class="btn btn-flat btn-success"><i class="fa fa-search"></i></button>
								</div>
							</div>
						</div>
					</div>
					<div class="box-body table-responsive no-padding">
						<table class="table table-hover">
							<tbody id="usertable"></tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</section>
	<div class="clearfix"></div>
</div>

<script src="/dependencies/jquery.js"></script>
<script src="/js/dropdown.js"></script>
<script>
	const inputList = ['name', 'description', 'price', 'brand'];
	const selectList = ['group', 'category', 'type'];
	let productList;
	let selectedProductId;
	let groupMap = [];
	let typeMap = [];
	let allCategories = [];

	getProducts();
	getSelectData();

	function getProducts() {
		let listData = `<tr><th>Product</th><th>Brand</th><th>Description</th><th>Price</th><th>Quantity</th></tr>`;
		$.get('/api/products', (data) => {
			data.forEach((element, index) => {
				listData += '<tr><td>' + element.name + '</td><td>' + element.brand + '</td>';
				listData += '<td>' + element.description + '</td><td><input type="number" id="invoicePrice' + index + '" value=' + element.price + '></td>';
				listData += '<td><input type="number" id="invoiceQuantity' + index + '"></td><td><button onclick="invoice(' + index + ')">Invoice</button></td>';
				listData += '<td><button class="label label-primary" onclick="editEntry(' + index + ')">Edit</button><button class="label label-danger" onclick="deleteEntry(' + index + ')">Delete</button></td></tr>';
			});
			document.getElementById('usertable').innerHTML = listData;
			productList = data;
		});
	}

	function getSelectData() {
		$.get('/tov?type=Product Category', (data) => {
			setSelectionList('category', data[0].values);
			allCategories = data;
		});
	}

	function invoice(index) {
		const price = document.getElementById('invoicePrice' + index).value;
		const quantity = document.getElementById('invoiceQuantity' + index).value;

		var newWindow = window.open();
		newWindow.document.write("hello, the price is " + price + ', quantity ' + quantity + ' product ' + productList[index].name);
	}

	function categorySelected() {
		const selectedGroup = getSelectedText('category');
		const selectedIndex = getSelectedIndex('category') - 2;
		const maps = allCategories[selectedIndex].map[selectedGroup];
		const mappedGroups = [];
		maps.forEach(element => {
			if (element['Product Group']) mappedGroups.push(element['Product Group']);
		});

		setSelectionList('group', mappedGroups);
		$.get('/api/getGroups?groups=' + mappedGroups.join(','), (data) => groupMap = data);

	}

	function groupSelected() {
		const selectedGroup = getSelectedText('group');
		const selectedIndex = getSelectedIndex('group') - 2;
		const maps = groupMap;
		const mappedGroups = [];
		maps[selectedGroup].forEach(element => {
			if (element['Product Type']) mappedGroups.push(element['Product Type']);
		});

		setSelectionList('type', mappedGroups);
	}

	function editEntry(index) {
		document.getElementById('submitEdit').disabled = false;

		inputList.forEach(element => document.getElementById(element).value = productList[index][element]);
		selectedProductId = productList[index].id;
	}

	function getInputData() {
		data = {};
		const length = inputList.length;
		let success = true;

		for (let i = 0; i < length; i++) {
			const currentValue = document.getElementById(inputList[i]).value;
			if (!currentValue) {
				success = false;
				alert('Enter value for ' + inputList[i]);
				break;
			}
			data[inputList[i]] = currentValue;
		}

		if (!success) return false;

		selectList.forEach(id => data[id] = getSelectedText(id));

		return data;
	}

	function setNull() {
		inputList.forEach(element => document.getElementById(element).value = null);
	}

	function deleteEntry(index) {
		$.ajax({
			url: '/deleteUser', method: 'DELETE', data: { userid: productList[index].id }, success: res => {
				if (res.update) {
					getProducts();
					selectedUserId = null;
				}
			}
		});
	}

	function edit() {
		let data = getInputData();
		if (!data) return;
		data.id = selectedProductId;

		$.ajax({
			url: '/api/products', method: 'PUT', data: data, success: res => {
				if (res.update) {
					getProducts();
					selectedProductId = null;
					setNull();
				}
				else alert(res.message);
			}
		});
	}

	function submit() {
		let data = getInputData();
		if (!data) return;

		$.post('/api/products', data, (res) => {
			if (!res.success) alert('Something is wrong');
			else getProducts();
		});
	}
</script>